{"ast":null,"code":"var _jsxFileName = \"/Users/mikeijams/Documents/BlueProjectClient/client/src/App.js\";\nimport React, { useCallback, useEffect, useState, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Sitebar from \"./home/Navbar\";\nimport Auth from \"./Auth/Auth\";\nimport BeerIndex from \"./Beers/BeerIndex\";\nimport Navbar from \"./home/Navbar\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AllPosts from \"./Beers/AllPosts\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport MyPosts from \"./Beers/MyPosts\";\nimport APIURL from \"./helpers/enviornments\";\n\nfunction App() {\n  const [sessionToken, setSessionToken] = useState(\"\");\n  const [beer, setBeer] = useState([]);\n\n  const fetchBeer = () => {\n    fetch(`${APIURL}/beer/`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: sessionToken\n      })\n    }).then(res => res.json()).then(logData => {\n      setBeer(logData);\n      console.log(logData);\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setSessionToken(localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  const updateToken = newToken => {\n    localStorage.setItem(\"token\", newToken);\n    setSessionToken(newToken);\n    console.log(sessionToken);\n  };\n\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken(\"\");\n  };\n\n  const protectedViews = () => {\n    return sessionToken === localStorage.getItem(\"token\") ? /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/allposts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BeerIndex, {\n      fetchBeer: fetchBeer,\n      beer: beer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/myposts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MyPosts, {\n      fetchBeer: fetchBeer,\n      beer: beer,\n      token: sessionToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }))) : /*#__PURE__*/React.createElement(Auth, {\n      updateToken: updateToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: \"#3D7068\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sitebar, {\n    clickLogout: clearToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), protectedViews())));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mikeijams/Documents/BlueProjectClient/client/src/App.js"],"names":["React","useCallback","useEffect","useState","Fragment","Sitebar","Auth","BeerIndex","Navbar","BrowserRouter","Router","AllPosts","Route","Link","Switch","MyPosts","APIURL","App","sessionToken","setSessionToken","beer","setBeer","fetchBeer","fetch","method","headers","Headers","Authorization","then","res","json","logData","console","log","localStorage","getItem","updateToken","newToken","setItem","clearToken","clear","protectedViews","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, Fragment } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Sitebar from \"./home/Navbar\";\nimport Auth from \"./Auth/Auth\";\nimport BeerIndex from \"./Beers/BeerIndex\";\nimport Navbar from \"./home/Navbar\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport AllPosts from \"./Beers/AllPosts\";\nimport { Route, Link, Switch } from \"react-router-dom\";\nimport MyPosts from \"./Beers/MyPosts\";\nimport APIURL from \"./helpers/enviornments\";\n\nfunction App() {\n  const [sessionToken, setSessionToken] = useState(\"\");\n  const [beer, setBeer] = useState([]);\n\n  const fetchBeer = () => {\n    fetch(`${APIURL}/beer/`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((logData) => {\n        setBeer(logData);\n        console.log(logData);\n      });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      setSessionToken(localStorage.getItem(\"token\"));\n    }\n  }, []);\n\n  const updateToken = (newToken) => {\n    localStorage.setItem(\"token\", newToken);\n    setSessionToken(newToken);\n    console.log(sessionToken);\n  };\n\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken(\"\");\n  };\n\n  const protectedViews = () => {\n    return sessionToken === localStorage.getItem(\"token\") ? (\n      <Switch>\n        <Route exact path=\"/allposts\">\n          <BeerIndex fetchBeer={fetchBeer} beer={beer} />\n        </Route>\n        <Route exact path=\"/myposts\">\n          <MyPosts fetchBeer={fetchBeer} beer={beer} token={sessionToken} />\n        </Route>\n      </Switch>\n    ) : (\n      <Auth updateToken={updateToken} />\n    );\n  };\n\n  return (\n    <>\n      <Router>\n        <div className=\"App\" style={{ backgroundColor: \"#3D7068\" }}>\n          <Sitebar clickLogout={clearToken} />\n          {protectedViews()}\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}