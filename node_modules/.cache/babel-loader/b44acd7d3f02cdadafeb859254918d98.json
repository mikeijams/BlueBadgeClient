{"ast":null,"code":"var _jsxFileName = \"/Users/mikeijams/Documents/BlueProjectClient/client/src/home/Signup.js\";\nimport React, { useState } from \"react\";\nimport { Form, FormGroup, Label, Input, Button, Alert } from \"reactstrap\";\nimport APIURL from \"../helpers/enviornments\";\n\nconst Signup = props => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password.length <= 5) {\n      fetch(`${APIURL}/signup`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        }),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\"\n        })\n      }).then(response => response.json()).then(data => {\n        props.updateToken(data.sessionToken);\n      });\n    } else {\n      setShow(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    onChange: e => setUsername(e.target.value),\n    name: \"username\",\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: e => setPassword(e.target.value),\n    name: \"password\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"SignUp\")), show && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    dismissible: true,\n    onClose: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Your Password Must Be More Than 5 Characters\")));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/mikeijams/Documents/BlueProjectClient/client/src/home/Signup.js"],"names":["React","useState","Form","FormGroup","Label","Input","Button","Alert","APIURL","Signup","props","username","setUsername","password","setPassword","show","setShow","handleSubmit","event","preventDefault","length","fetch","method","body","JSON","stringify","user","headers","Headers","then","response","json","data","updateToken","sessionToken","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, FormGroup, Label, Input, Button, Alert } from \"reactstrap\";\nimport APIURL from \"../helpers/enviornments\";\n\nconst Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (password.length <= 5) {\n      fetch(`${APIURL}/signup`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          user: { username: username, password: password },\n        }),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          props.updateToken(data.sessionToken);\n        });\n    } else {\n      setShow(true);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Sign Up</h1>\n      <Form onSubmit={handleSubmit}>\n        <FormGroup>\n          <Label htmlFor=\"username\">Username</Label>\n          <Input\n            type=\"email\"\n            onChange={(e) => setUsername(e.target.value)}\n            name=\"username\"\n            value={username}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"password\">Password</Label>\n          <Input\n            onChange={(e) => setPassword(e.target.value)}\n            name=\"password\"\n            value={password}\n          />\n        </FormGroup>\n        <Button type=\"submit\">SignUp</Button>\n      </Form>\n\n      {show && (\n        <Alert variant=\"danger\" dismissible onClose={() => setShow(false)}>\n          <p>Your Password Must Be More Than 5 Characters</p>\n        </Alert>\n      )}\n    </div>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}