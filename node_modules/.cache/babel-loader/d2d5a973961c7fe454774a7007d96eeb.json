{"ast":null,"code":"var _jsxFileName = \"/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/MyPosts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Table, CardColumns } from \"reactstrap\";\nimport APIURL from \"../helpers/enviornments\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from \"reactstrap\";\nimport BeerEdit from \"./BeerEdit\";\n\nconst MyPosts = props => {\n  const id = localStorage.getItem(\"id\");\n  const [beer, setBeer] = useState([]);\n  useEffect(() => {\n    if (props.token != \"\") {\n      fetch(`http://localhost:3001/beer/mine/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Authorization: props.token\n        })\n      }).then(res => res.json()).then(logData => {\n        setBeer(logData);\n        console.log(logData);\n      });\n    }\n  }, []);\n  const [updateActive, setUpdateActive] = useState(false);\n  const [beerToUpdate, setBeerToUpdate] = useState({});\n\n  const editUpdateBeer = beer => {\n    setBeerToUpdate(beer);\n    console.log(beer);\n  };\n\n  const updateOn = () => {\n    setUpdateActive(true);\n  };\n\n  const updateOff = () => {\n    setUpdateActive(false);\n  };\n\n  const myMapper = () => {\n    if (beer) {\n      return beer.map((beer, index) => {\n        return /*#__PURE__*/React.createElement(CardColumns, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CardImg, {\n          top: true,\n          width: \"100%\",\n          alt: \"Card image cap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CardTitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, beer.name), /*#__PURE__*/React.createElement(CardSubtitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }\n        }, beer.brewery), /*#__PURE__*/React.createElement(CardSubtitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, beer.abvibu), /*#__PURE__*/React.createElement(CardSubtitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, beer.location), /*#__PURE__*/React.createElement(CardText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }, beer.comments), /*#__PURE__*/React.createElement(BeerEdit, {\n          beerToUpdate: beerToUpdate,\n          updateOff: updateOff,\n          token: props.token,\n          id: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 16\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          color: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }, \"Delete\"))));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, myMapper());\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/MyPosts.js"],"names":["React","useState","useEffect","Table","CardColumns","APIURL","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","BeerEdit","MyPosts","props","id","localStorage","getItem","beer","setBeer","token","fetch","method","headers","Headers","Authorization","then","res","json","logData","console","log","updateActive","setUpdateActive","beerToUpdate","setBeerToUpdate","editUpdateBeer","updateOn","updateOff","myMapper","map","index","name","brewery","abvibu","location","comments"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, CardColumns } from \"reactstrap\";\nimport APIURL from \"../helpers/enviornments\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n} from \"reactstrap\";\nimport BeerEdit from \"./BeerEdit\";\n\nconst MyPosts = (props) => {\n  const id = localStorage.getItem(\"id\");\n\n  const [beer, setBeer] = useState([]);\n  useEffect(() => {\n    if (props.token != \"\") {\n      fetch(`http://localhost:3001/beer/mine/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Authorization: props.token,\n        }),\n      })\n        .then((res) => res.json())\n        .then((logData) => {\n          setBeer(logData);\n          console.log(logData);\n        });\n    }\n  }, []);\n\n\n\n  const [updateActive, setUpdateActive] = useState(false);\n  const [beerToUpdate, setBeerToUpdate] = useState({});\n\n  const editUpdateBeer = (beer) => {\n      setBeerToUpdate(beer);\n      console.log(beer)\n  }\n  const updateOn = () => {\n      setUpdateActive(true);\n  }\n\n  const updateOff = () => {\n      setUpdateActive(false)\n  }\n\n  const myMapper = () => {\n    if (beer) {\n      return beer.map((beer, index) => {\n        return (\n          <CardColumns>\n            <Card>\n              <CardImg top width=\"100%\" alt=\"Card image cap\" />\n              <CardBody>\n                <CardTitle>{beer.name}</CardTitle>\n                <CardSubtitle>{beer.brewery}</CardSubtitle>\n                <CardSubtitle>{beer.abvibu}</CardSubtitle>\n                <CardSubtitle>{beer.location}</CardSubtitle>\n                <CardText>{beer.comments}</CardText>\n               <BeerEdit beerToUpdate={beerToUpdate} updateOff={updateOff} token={props.token} id={id}\n             /> \n                <Button color=\"danger\">Delete</Button>\n              </CardBody>\n            </Card>\n          </CardColumns>\n        );\n      });\n    }\n  };\n  return <>{myMapper()}</>;\n};\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}