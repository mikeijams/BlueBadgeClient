{"ast":null,"code":"var _jsxFileName = \"/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/BeerEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nconst BeerEdit = props => {\n  const beerUpdate = (event, beer) => {\n    event.preventDefault();\n    fetch(`http://localhost:3001/beer/update/${props.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        beer: {\n          name: editName,\n          brewery: editBrewery,\n          abvibu: editAbvibu,\n          location: editLocation,\n          comments: editComments\n        }\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token\n      })\n    }).then(res => {\n      props.fetchBeer();\n      props.updateOff();\n    });\n  };\n\n  const updatingBeer = () => {\n    fetch(`http://localhost:3001/beer/:id`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token\n      })\n    }).then(res => res.json()).then(logData => {\n      setEditName(logData.name);\n      setEditBrewery(logData.brewery);\n      setEditAbvibu(logData.abvibu);\n      setEditLocation(logData.location);\n      setEditComments(logData.comments);\n      console.log(logData);\n    });\n  };\n\n  useEffect(() => {\n    updatingBeer();\n  }, []);\n  const [editName, setEditName] = useState(\"\");\n  const [editBrewery, setEditBrewery] = useState(\"\");\n  const [editAbvibu, setEditAbvibu] = useState(\"\");\n  const [editLocation, setEditLocation] = useState(\"\");\n  const [editComments, setEditComments] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Edit Post\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: beerUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    defaultValue: editName,\n    name: \"name\",\n    value: editName,\n    onChange: e => setEditName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"brewery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Brewery\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"description\",\n    value: editBrewery,\n    onChange: e => setEditBrewery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"abvibu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"ABV/IBU\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"abvibu\",\n    value: editAbvibu,\n    onChange: e => setEditAbvibu(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"location\",\n    value: editLocation,\n    onChange: e => setEditLocation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Additional Comments\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"comments\",\n    value: editComments,\n    onChange: e => setEditComments(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: () => {\n      props.editUpdateBeer(props.beer);\n      props.updateOn();\n    },\n    onClick: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Post!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: hideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\n\nexport default BeerEdit;","map":{"version":3,"sources":["/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/BeerEdit.js"],"names":["React","useState","useEffect","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Button","BeerEdit","props","beerUpdate","event","beer","preventDefault","fetch","id","method","body","JSON","stringify","name","editName","brewery","editBrewery","abvibu","editAbvibu","location","editLocation","comments","editComments","headers","Headers","Authorization","token","then","res","fetchBeer","updateOff","updatingBeer","json","logData","setEditName","setEditBrewery","setEditAbvibu","setEditLocation","setEditComments","console","log","isOpen","setIsOpen","showModal","hideModal","e","target","value","editUpdateBeer","updateOn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\n\nconst BeerEdit = (props) => {\n  const beerUpdate = (event, beer) => {\n    event.preventDefault();\n    fetch(`http://localhost:3001/beer/update/${props.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        beer: {\n          name: editName,\n          brewery: editBrewery,\n          abvibu: editAbvibu,\n          location: editLocation,\n          comments: editComments,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    }).then((res) => {\n      props.fetchBeer();\n      props.updateOff();\n    });\n  };\n\n  const updatingBeer = () => {\n    fetch(`http://localhost:3001/beer/:id`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token,\n      }),\n    })\n      .then((res) => res.json())\n      .then((logData) => {\n        setEditName(logData.name);\n        setEditBrewery(logData.brewery);\n        setEditAbvibu(logData.abvibu);\n        setEditLocation(logData.location);\n        setEditComments(logData.comments);\n        console.log(logData);\n      });\n  };\n\n  useEffect(() => {\n    updatingBeer();\n  }, []);\n\n  const [editName, setEditName] = useState(\"\");\n  const [editBrewery, setEditBrewery] = useState(\"\");\n  const [editAbvibu, setEditAbvibu] = useState(\"\");\n  const [editLocation, setEditLocation] = useState(\"\");\n  const [editComments, setEditComments] = useState(\"\");\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const showModal = () => {\n    setIsOpen(true);\n  };\n\n  const hideModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <button onClick={showModal}>Edit</button>\n      <Modal isOpen={isOpen}>\n        <ModalHeader>Edit Post</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={beerUpdate}>\n            <FormGroup>\n              <Label htmlFor=\"name\">Name</Label>\n              <Input\n                defaultValue={editName}\n                name=\"name\"\n                value={editName}\n                onChange={(e) => setEditName(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"brewery\">Brewery</Label>\n              <Input\n                name=\"description\"\n                value={editBrewery}\n                onChange={(e) => setEditBrewery(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"abvibu\">ABV/IBU</Label>\n              <Input\n                name=\"abvibu\"\n                value={editAbvibu}\n                onChange={(e) => setEditAbvibu(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"location\">Location</Label>\n              <Input\n                name=\"location\"\n                value={editLocation}\n                onChange={(e) => setEditLocation(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label htmlFor=\"comments\">Additional Comments</Label>\n              <Input\n                name=\"comments\"\n                value={editComments}\n                onChange={(e) => setEditComments(e.target.value)}\n              />\n            </FormGroup>\n            <Button\n              type=\"submit\"\n              onClick={() => {\n                props.editUpdateBeer(props.beer);\n                props.updateOn();\n              }}\n              onClick={hideModal}\n            >\n              Post!\n            </Button>\n            <button onClick={hideModal}>Cancel</button>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default BeerEdit;\n"]},"metadata":{},"sourceType":"module"}