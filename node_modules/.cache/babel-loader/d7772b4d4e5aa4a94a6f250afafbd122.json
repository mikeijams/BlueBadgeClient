{"ast":null,"code":"var _jsxFileName = \"/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/BeerCreate.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport APIURL from '../helpers/enviornments';\n\nconst BeerCreate = props => {\n  const [name, setName] = useState('');\n  const [brewery, setBrewery] = useState('');\n  const [abvibu, setAbvibu] = useState('');\n  const [location, setLocation] = useState();\n  const [comments, setComments] = useState();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`${APIURL}/beer/create`, {\n      method: 'POST',\n      body: JSON.stringify({\n        beer: {\n          name: name,\n          brewery: brewery,\n          abvibu: abvibu,\n          location: location,\n          comments: comments\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    }).then(res => res.json()).then(logData => {\n      console.log(logData);\n      setName('');\n      setBrewery('');\n      setAbvibu('');\n      setLocation('');\n      setComments('');\n      props.fetchBeer();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Post A Beer\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"brewery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Brewery\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"description\",\n    value: brewery,\n    onChange: e => setBrewery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Update the workout\"))));\n};\n\nexport default BeerCreate;","map":{"version":3,"sources":["/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/BeerCreate.js"],"names":["React","useState","useEffect","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Button","APIURL","BeerCreate","props","name","setName","brewery","setBrewery","abvibu","setAbvibu","location","setLocation","comments","setComments","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","beer","headers","Headers","token","then","res","json","logData","console","log","fetchBeer","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';  \nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n  } from \"reactstrap\";\n  import APIURL from '../helpers/enviornments';\n\n\nconst BeerCreate = (props) => {\n    const [name, setName] = useState('');\n    const [brewery, setBrewery] = useState('');\n    const [abvibu, setAbvibu] = useState('');\n    const [location, setLocation] = useState();\n    const [comments, setComments] = useState();\n\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(`${APIURL}/beer/create`, {\n            method: 'POST',\n            body: JSON.stringify({beer:{name: name, brewery: brewery, abvibu: abvibu, location: location, comments: comments}}),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        }).then((res) => res.json())\n        .then((logData) => {\n            console.log(logData);\n            setName('');\n            setBrewery('');\n            setAbvibu('');\n            setLocation('');\n            setComments('');\n            props.fetchBeer();\n        })\n    }\n\n    return (   \n      <Modal isOpen={true}>\n      <ModalHeader>Post A Beer</ModalHeader>\n      <ModalBody>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"name\">Name</Label>\n            <Input\n              name=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"brewery\">Brewery</Label>\n            <Input\n              name=\"description\"\n              value={brewery}\n              onChange={(e) => setBrewery(e.target.value)}\n            />\n          </FormGroup>\n          <Button type=\"submit\">Update the workout</Button>\n        </Form>\n      </ModalBody>\n    </Modal>\n      );\n}\n \nexport default BeerCreate;"]},"metadata":{},"sourceType":"module"}