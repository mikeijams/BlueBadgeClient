{"ast":null,"code":"var _jsxFileName = \"/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/MyPosts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Table, CardColumns } from \"reactstrap\";\nimport APIURL from \"../helpers/enviornments\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from \"reactstrap\";\nimport BeerEdit from \"./BeerEdit\";\n\nconst MyPosts = props => {\n  const id = localStorage.getItem(\"id\");\n  const [beer, setBeer] = useState([]);\n  useEffect(() => {\n    if (props.token != \"\") {\n      fetch(`http://localhost:3001/beer/mine/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Authorization: props.token\n        })\n      }).then(res => res.json()).then(logData => {\n        setBeer(logData);\n        console.log(logData);\n      });\n    }\n  }, []);\n  console.log(props);\n  const [updateActive, setUpdateActive] = useState(false);\n  const [beerToUpdate, setBeerToUpdate] = useState({});\n\n  const editUpdateBeer = beer => {\n    setBeerToUpdate(beer);\n    console.log(beer);\n  };\n\n  const updateOn = () => {\n    setUpdateActive(true);\n  };\n\n  const updateOff = () => {\n    setUpdateActive(false);\n  };\n\n  const deleteBeer = beer => {\n    fetch(`http://localhost:3001/beer/${beer.id}`, {\n      method: 'DELETE',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    }).then(() => props.fetchBeer());\n  };\n\n  const updatingBeer = () => {\n    fetch(`http://localhost:3001/beer/:id`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: props.token\n      })\n    }).then(res => res.json()).then(logData => {\n      setEditName(logData.name);\n      setEditBrewery(logData.brewery);\n      setEditAbvibu(logData.abvibu);\n      setEditLocation(logData.location);\n      setEditComments(logData.comments);\n      console.log(logData);\n    });\n  };\n\n  useEffect(() => {\n    updatingBeer();\n  }, []);\n  const [editName, setEditName] = useState(\"\");\n  const [editBrewery, setEditBrewery] = useState(\"\");\n  const [editAbvibu, setEditAbvibu] = useState(\"\");\n  const [editLocation, setEditLocation] = useState(\"\");\n  const [editComments, setEditComments] = useState(\"\");\n\n  const myMapper = () => {\n    if (beer) {\n      return beer.map((beer, index) => {\n        return /*#__PURE__*/React.createElement(CardColumns, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CardImg, {\n          top: true,\n          width: \"100%\",\n          alt: \"Card image cap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(CardBody, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CardTitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, beer.name), /*#__PURE__*/React.createElement(CardSubtitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }\n        }, beer.brewery), /*#__PURE__*/React.createElement(CardSubtitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }, beer.abvibu), /*#__PURE__*/React.createElement(CardSubtitle, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, beer.location), /*#__PURE__*/React.createElement(CardText, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        }, beer.comments), /*#__PURE__*/React.createElement(BeerEdit, {\n          beerToUpdate: beerToUpdate,\n          updateOff: updateOff,\n          token: props.token,\n          id: id,\n          fetchBeer: props.fetchBeer,\n          edit: editName,\n          setEditName: setEditName,\n          editBrewery: editBrewery,\n          set: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          color: \"warning\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"danger\",\n          onClick: () => {\n            deleteBeer(beer);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, \"Delete\"))));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, myMapper());\n};\n\nexport default MyPosts;","map":{"version":3,"sources":["/Users/mikeijams/Documents/BlueProjectClient/client/src/Beers/MyPosts.js"],"names":["React","useState","useEffect","Table","CardColumns","APIURL","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","BeerEdit","MyPosts","props","id","localStorage","getItem","beer","setBeer","token","fetch","method","headers","Headers","Authorization","then","res","json","logData","console","log","updateActive","setUpdateActive","beerToUpdate","setBeerToUpdate","editUpdateBeer","updateOn","updateOff","deleteBeer","fetchBeer","updatingBeer","setEditName","name","setEditBrewery","brewery","setEditAbvibu","abvibu","setEditLocation","location","setEditComments","comments","editName","editBrewery","editAbvibu","editLocation","editComments","myMapper","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table, CardColumns } from \"reactstrap\";\nimport APIURL from \"../helpers/enviornments\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Button,\n} from \"reactstrap\";\nimport BeerEdit from \"./BeerEdit\";\n\nconst MyPosts = (props) => {\n  const id = localStorage.getItem(\"id\");\n\n  const [beer, setBeer] = useState([]);\n  useEffect(() => {\n    if (props.token != \"\") {\n      fetch(`http://localhost:3001/beer/mine/${id}`, {\n        method: \"GET\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Authorization: props.token,\n        }),\n      })\n        .then((res) => res.json())\n        .then((logData) => {\n          setBeer(logData);\n          console.log(logData);\n        });\n    }\n  }, []);\n\nconsole.log(props)\n\n  const [updateActive, setUpdateActive] = useState(false);\n  const [beerToUpdate, setBeerToUpdate] = useState({});\n\n  const editUpdateBeer = (beer) => {\n      setBeerToUpdate(beer);\n      console.log(beer)\n  }\n  const updateOn = () => {\n      setUpdateActive(true);\n  }\n\n  const updateOff = () => {\n      setUpdateActive(false)\n  }\n\n  const deleteBeer = (beer) => {\n    fetch(`http://localhost:3001/beer/${beer.id}`, {\n        method: 'DELETE', \n        headers: new Headers({\n            'Content-Type': 'application/json', \n            'Authorization': props.token\n        })\n    })\n    .then(() => props.fetchBeer())\n}\n\nconst updatingBeer = () => {\n  fetch(`http://localhost:3001/beer/:id`, {\n    method: \"GET\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: props.token,\n    }),\n  })\n    .then((res) => res.json())\n    .then((logData) => {\n      setEditName(logData.name);\n      setEditBrewery(logData.brewery);\n      setEditAbvibu(logData.abvibu);\n      setEditLocation(logData.location);\n      setEditComments(logData.comments);\n      console.log(logData);\n    });\n};\n\nuseEffect(() => {\n  updatingBeer();\n}, []);\n\nconst [editName, setEditName] = useState(\"\");\nconst [editBrewery, setEditBrewery] = useState(\"\");\nconst [editAbvibu, setEditAbvibu] = useState(\"\");\nconst [editLocation, setEditLocation] = useState(\"\");\nconst [editComments, setEditComments] = useState(\"\");\n\n\n  const myMapper = () => {\n    if (beer) {\n      return beer.map((beer, index) => {\n        return (\n          <CardColumns>\n            <Card>\n              <CardImg top width=\"100%\" alt=\"Card image cap\" />\n              <CardBody>\n                <CardTitle>{beer.name}</CardTitle>\n                <CardSubtitle>{beer.brewery}</CardSubtitle>\n                <CardSubtitle>{beer.abvibu}</CardSubtitle>\n                <CardSubtitle>{beer.location}</CardSubtitle>\n                <CardText>{beer.comments}</CardText>\n                <BeerEdit beerToUpdate={beerToUpdate} updateOff={updateOff} token={props.token} id={id}\n               fetchBeer={props.fetchBeer} edit={editName} setEditName={setEditName} editBrewery={editBrewery} set \n             /> \n              <Button color=\"warning\" >Update</Button>\n                <Button color=\"danger\" onClick={() => {deleteBeer(beer)}}>Delete</Button>\n              </CardBody>\n            </Card>\n          </CardColumns>\n        );\n      });\n    }\n  };\n  return <>{myMapper()}</>;\n};\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}